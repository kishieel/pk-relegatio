x-templates:
  ts-microservice-config: &ts-microservice-config
    port: 3000
  ts-microservice-env: &ts-microservice-env
    NODE_ENV:
      value: production
    HOST:
      value: 0.0.0.0
    PORT:
      value: 3000

microservices:
  auth:
    <<: *ts-microservice-config
    image: ghcr.io/kishieel/relegatio-auth:1.0.0
    env:
      <<: *ts-microservice-env
      DATABASE_URL:
        value: microservices
      JWT_SECRET:
        value: secret # @todo: change this to a secret or environment variable

  gateway:
    <<: *ts-microservice-config
    image: ghcr.io/kishieel/relegatio-gateway:1.0.1
    env:
      <<: *ts-microservice-env

  notifications:
    <<: *ts-microservice-config
    image: ghcr.io/kishieel/relegatio-notifications:1.0.0
    env:
      <<: *ts-microservice-env
      DATABASE_URL:
        value: notifications

  posts:
    <<: *ts-microservice-config
    image: ghcr.io/kishieel/relegatio-posts:1.0.1
    development:
      enabled: true
      source: /home/tomek/Repozytoria/pk-systemy-gridowe-relegatio/microservices/posts
    env:
      <<: *ts-microservice-env
      DATABASE_URL:
        value: posts

mysql:
  fullnameOverride: mysql

redis:
  fullnameOverride: redis

rabbitmq:
  fullnameOverride: rabbit

couchdb:
  fullnameOverride: couchdb
  couchdbConfig:
    couchdb:
      uuid: 1298f2bb208f47a69f31a7d6afdd05f5

ingress:
  gateway:
    enabled: true
    serviceName: gateway
    servicePort: 3000
    hostname: localhost
    path: /graphql
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /graphql
  mysql:
    enabled: false
  redis:
    enabled: false
  mailpit:
    enabled: false
  rabbit:
    enabled: false
  couchdb:
    enabled: false

imagePullSecrets:
  - name: ghcr-secret

#replicaCount: 1
#
#image:
#  repository: nginx
#  pullPolicy: IfNotPresent
#  tag: ""
#
#nameOverride: ""
#fullnameOverride: ""
#
#serviceAccount:
#  create: true
#  automount: true
#  annotations: {}
#  name: ""
#
#podAnnotations: {}
#podLabels: {}
#
#podSecurityContext: {}
#
#securityContext: {}
#
#service:
#  type: ClusterIP
#  port: 80
#
#ingress:
#  enabled: false
#  className: ""
#  annotations: {}
#    # kubernetes.io/ingress.class: nginx
#    # kubernetes.io/tls-acme: "true"
#  hosts:
#    - host: chart-example.local
#      paths:
#        - path: /
#          pathType: ImplementationSpecific
#  tls: []
#  #  - secretName: chart-example-tls
#  #    hosts:
#  #      - chart-example.local
#
#resources: {}
#  # We usually recommend not to specify default resources and to leave this as a conscious
#  # choice for the user. This also increases chances charts run on environments with little
#  # resources, such as Minikube. If you do want to specify resources, uncomment the following
#  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#  # limits:
#  #   cpu: 100m
#  #   memory: 128Mi
#  # requests:
#  #   cpu: 100m
#  #   memory: 128Mi
#
#autoscaling:
#  enabled: true
#  minReplicas: 1
#  maxReplicas: 3
#  targetCPUUtilizationPercentage: 80
#
#volumes: []
## - name: foo
##   secret:
##     secretName: mysecret
##     optional: false
#
#volumeMounts: []
## - name: foo
##   mountPath: "/etc/foo"
##   readOnly: true
#
#nodeSelector: {}
#
#tolerations: []
#
#affinity: {}

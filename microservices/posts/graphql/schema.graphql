# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Author {
  createdAt: DateTimeISO!
  firstName: String!
  id: Cuid!
  lastName: String!
  posts: [Post!]!
  updatedAt: DateTimeISO!
}

enum AuthorFilterBy {
  ANY
  FIRST_NAME
  LAST_NAME
}

enum AuthorOrderBy {
  CREATED_AT
  FIRST_NAME
  LAST_NAME
  UPDATED_AT
}

input AuthorPaginationFilterByInput {
  field: AuthorFilterBy!
  operator: PaginationFilterByOperator = EQ
  value: String!
}

input AuthorPaginationInput {
  filterBy: [AuthorPaginationFilterByInput!]
  orderBy: [AuthorPaginationOrderByInput!]
  paging: AuthorPaginationPagingInput
}

input AuthorPaginationOrderByInput {
  direction: PaginationOrderByDirection!
  field: AuthorOrderBy!
}

input AuthorPaginationPagingInput {
  limit: Int
  offset: Int
}

"""
A field whose value conforms to the standard cuid format as specified in https://github.com/ericelliott/cuid#broken-down
"""
scalar Cuid @specifiedBy(url: "https://github.com/ericelliott/cuid#broken-down")

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type Mutation {
  postCreate(input: PostCreateInput!): Post!
  postDelete(id: Cuid!): Boolean!
  postUpdate(id: Cuid!, input: PostUpdateInput!): Post!
}

enum PaginationFilterByOperator {
  EQ
  GT
  GTE
  IN
  LIKE
  LT
  LTE
  NE
  NIN
  NLIKE
}

enum PaginationOrderByDirection {
  ASC
  DESC
}

type Post {
  author: Author!
  authorId: Cuid!
  content: String!
  createdAt: DateTimeISO!
  id: Cuid!
  slug: String!
  title: String!
  updatedAt: DateTimeISO!
}

input PostCreateInput {
  content: String!
  title: String!
}

enum PostFilterBy {
  ANY
  SLUG
  TITLE
}

enum PostOrderBy {
  CREATED_AT
  SLUG
  TITLE
  UPDATED_AT
}

type PostPagination {
  data: [Post!]!
  pageInfo: PostPaginationPageInfo!
}

input PostPaginationFilterByInput {
  field: PostFilterBy!
  operator: PaginationFilterByOperator = EQ
  value: String!
}

input PostPaginationInput {
  filterBy: [PostPaginationFilterByInput!]
  orderBy: [PostPaginationOrderByInput!]
  paging: PostPaginationPagingInput
}

input PostPaginationOrderByInput {
  direction: PaginationOrderByDirection!
  field: PostOrderBy!
}

type PostPaginationPageInfo {
  hasNextPage: Boolean!
  hasPrevPage: Boolean!
  limit: Int!
  offset: Int!
}

input PostPaginationPagingInput {
  limit: Int
  offset: Int
}

input PostUpdateInput {
  content: String
  title: String
}

type Query {
  author(id: Cuid!): Author!
  authors(input: AuthorPaginationInput!): [Author!]!
  post(id: Cuid!): Post!
  postBySlug(slug: String!): Post!
  posts(input: PostPaginationInput!): PostPagination!
}